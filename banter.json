[
  {
    "text": "As if a device can function if it has no style. As if a device can be called stylish that does not function superbly… yes, beauty matters. Boy, does it matter. It is not surface, it is not an extra, it is the thing itself.",
    "author": "Stephen Fry",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Inspiration exists, but it has to find you working.",
    "author": "Pablo Picasso",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Art is an idea that has found its perfect visual expression. And design is the vehicle by which this expression is made possible. Art is a noun, and design is a noun and also a verb. Art is a product and design is a process. Design is the foundation of all the arts.",
    "author": "Paul Rand",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "We can't just design an item that looks great. We also have to anticipate how it is boxed up, distributed, and shipped, as well as whether or not a seventeen-year-old kid with a summer job can stock it on the store shelf without ruining it.",
    "author": "Robin Perkins",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Measuring programming progress by lines of code is like measuring aircraft building progress by weight.",
    "author": "Bill Gates",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "You can't build a reputation on what you're going to do.",
    "author": "Henry Ford",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Delay always breeds danger; and to protract a great design is often to ruin it.",
    "author": "Miguel de Cervantes",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Think 8 hours, work 2 hours.",
    "author": "Mirko Ilic",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Legibility is not the same thing as readability.",
    "author": "Arlen Britton",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "I met with a potential client today [...] looking for revolutionary work delivered within a tight timescale, and if the work could be done at a reduced rate then they'd be able to send a load more work our way. \n\nThey wanted work that was fast, good, and cheap. And if the work was fast, good, and cheap enough, the reward would be the offer of more work that is fast, good, and cheap. … \n\nLet me be clear about this, these people are evil, and their work is poison.",
    "author": "Hoss Gifford",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Life is conversational. Web design should be the same way. On the web, you're talking to someone you've probably never met – so it's important to be clear and precise. Thus, well structured navigation and content organization goes hand in hand with having a good conversation.",
    "author": "Chikezie Ejiasi",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "It is important not to let the perfect become the enemy of the good, even when you can agree on what perfect is. Doubly so when you can't. As unpleasant as it is to be trapped by past mistakes, you can't make any progress by being afraid of your own shadow during design.",
    "author": "Greg Hudson",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "“It looks good” is the worst feedback you can get.",
    "author": "Whitney Hess",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Never stand still. If you stand still, you get lost, because someone else is always moving.",
    "author": "Armin Vit",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Every new thing you make will be (should be) the nicest thing you've made so far, because you're learning and getting better with each and every new project.",
    "author": "Jessica Hische",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Good design begins with honesty, asks tough questions, comes from collaboration and from trusting your intuition.",
    "author": "Freeman Thomas",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "The client may be king, but he's not the art director.",
    "author": "Von R. Glitschka",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "I'm not thinking about this pen when I'm writing with it. Rather, it's when you least think about it that the pen can be held most naturally.",
    "author": "Naoto Fukasawa",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Man up, admit it isn't good enough, and fix it now.",
    "author": "Robert Nealan",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "No matter how cool your interface is, it would be better if there were less of it.",
    "author": "Alan Cooper",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "I think design would be better if designers were much more skeptical about its applications. If you believe in the potency of your craft, where you choose to dole it out is not something to take lightly.",
    "author": "Frank Chimero",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Letterspacing creates speedbumps for the reader.",
    "author": "Michael Stinson",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Get in over your head as often and as joyfully as possible.",
    "author": "Alexander Isley",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Almost everything – all external expectations, all pride, all fear of embarrassment or failure – these things just fall away in the face of death, leaving only what is truly important.",
    "author": "Steve Jobs",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Be stimulated by rejection.",
    "author": "Bob Gill",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "When I am down, [I am] not good at any work, including design work.",
    "author": "Stefan Sagmeister",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "If you do good work for good clients, it will lead to other good work for other good clients. If you do bad work for bad clients, it will lead to other bad work for other bad clients.",
    "author": "Michael Bierut",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "If we want users to like our software we should design it to behave like a likeable person: respectful, generous and helpful.",
    "author": "Alan Cooper",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Graphic design is building systems.",
    "author": "Michael Stinson",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "When I am working on a problem, I never think about beauty. I only think about how to solve the problem. But when I have finished, if the solution isn't beautiful, I know it is wrong.",
    "author": "Richard Buckminster Fuller",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Honesty is the best policy, unless you work in advertising.",
    "author": "Jenn Loots",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Remember it takes a lot of shit, to create a beautiful flower.",
    "author": "Jacob Cass",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "One should respect public opinion in so far as is necessary to avoid starvation and to keep out of prison.",
    "author": "Bertrand Russell",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "The work you do while you procrastinate is probably the work you should be doing for the rest of your life.",
    "author": "Jessica Hische",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Those who say “it's not personal, it's just business” are lying. All business is personal, and the best business is very personal.",
    "author": "Richard Lenz",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Don't explain why it works; explain how you use it.",
    "author": "Steven Brust",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "If all else fails, [working harder than anyone else] is the greatest competitive advantage of any career.",
    "author": "John C Jay",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "The world always seems brighter when you've just made something that wasn't there before.",
    "author": "Neil Gaiman",
    "tags": [
      "quote",
      "design"
    ]
  },
  {
    "text": "Software is like entropy: It is difficult to grasp, weighs nothing, and obeys the Second Law of Thermodynamics; i.e., it always increases.",
    "author": "Norman Augustine",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "As any poet knows, a system is a way of looking at the world.",
    "author": "Jerry Weinberg",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "The internet? That thing is still around?",
    "author": "Homer J. Simpson",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Weeks of programming can save you hours of planning.",
    "author": "Unknown",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "The only system which is truly secure is one which is switched off and unplugged, locked in a titanium lined safe, buried in a concrete bunker, and is surrounded by nerve gas and very highly paid armed guards. Even then, I wouldn't stake my life on it.",
    "author": "Gene Spafford",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "f u cn rd ths, u cn gt a gd jb n sftwr tstng.",
    "author": "Unknown",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "Automation does not do what testers used to do, unless one ignores most things a tester really does. Automated testing is useful for extending the reach of the testers work, not to replace it.",
    "author": "James Bach",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "// Beware of bugs in the above code; I have only proved it correct, not tried it.",
    "author": "Donald Knuth",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "More than the act of testing, the act of designing tests is one of the best bug preventers known.",
    "author": "Boris Belzer",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "If we want to be serious about quality, it is time to get tired of finding bugs and start preventing their happening in the first place.",
    "author": "Alan Page",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "Testing leads to failure, and failure leads to understanding.",
    "author": "Burt Rutan",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "Just because you've counted all the trees doesn't mean you've seen the forest.",
    "author": "Unknown",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "Testing is an infinite process of comparing the invisible to the ambiguous in order to avoid the unthinkable happening to the anonymous.",
    "author": "James Bach",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "The most exciting phrase to hear in science, the one that heralds discoveries, is not ‘Eureka!' but ‘Now that's funny…'",
    "author": "Isaac Asimov",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "Discovering the unexpected is more important than confirming the known.",
    "author": "George E. P. Box",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "No amount of testing can prove a software right, a single test can prove a software wrong.",
    "author": "Amir Ghahral",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "I am pretty sure there is a difference between “this has not been proven” and “this is false.",
    "author": "Ron Jeffries",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "The problem is not that testing is the bottleneck. The problem is that you don't know what's in the bottle. That's a problem that testing addresses.",
    "author": "Michael Bolton",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "A pinch of probability is worth a pound of perhaps.",
    "author": "James Thurber",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "Testers don't like to break things; they like to dispel the illusion that things work.",
    "author": "Kaner, Bach, Pettichord",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "Quality means doing it right even when no one is looking.",
    "author": "Henry Ford",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "Quality is not an act, it is a habit.",
    "author": "Aristotle",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "The bitterness of poor quality remains long after the sweetness of low price is forgotten.",
    "author": "Benjamin Franklin",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "Quality is free, but only to those who are willing to pay heavily for it.",
    "author": "DeMarco and Lister",
    "tags": [
      "quote",
      "testing"
    ]
  },
  {
    "text": "Prolific developers don't always write a lot of code, instead they solve a lot of problems. The two things are not the same.",
    "author": "J. Chambers",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Program testing can be used to show the presence of bugs, but never to show their absence!",
    "author": "Edsger Dijkstra",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "q. 'Daddy, how is software made?' \n a. 'Well, when a programmer loves an idea very much they stay up all night and then push to github the next day.'",
    "author": "Sam Kottler",
    "tags": [
      "joke"
    ]
  },
  {
    "text": "Walking on water and developing software from a specification are easy if both are frozen.",
    "author": "Edward V Berard",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Programmers don't burn out on hard work, they burn out on change-with-the-wind directives and not ‘shipping'.",
    "author": "Mark Berry",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Without requirements or design, programming is the art of adding bugs to an empty text file.",
    "author": "Louis Srygley",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Sometimes it pays to stay in bed on Monday, rather than spending the rest of the week debugging Monday's code.",
    "author": "Christopher Thompson",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Programming is like sex. One mistake and you have to support it for the rest of your life.",
    "author": "Michael Sinz",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Learn from yesterday, live for today, hope for tomorrow. The important thing is not to stop questioning.",
    "author": "Albert Einstein",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Measuring programming progress by lines of code is like measuring aircraft building progress by weight.",
    "author": "Bill Gates",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "When I'm working on a problem, I never think about beauty. I think only how to solve the problem. But when I have finished, if the solution is not beautiful, I know it is wrong.",
    "author": "Freeman Dyson",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Almost everything we know about good software architecture has to do with making software easy to change",
    "author": "Mary Poppendieck",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "With software there are only two possibilities: either the users control the programme or the programme controls the users. If the programme controls the users, and the developer controls the programme, then the programme is an instrument of unjust power.",
    "author": "Richard M. Stallman",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "It is not enough for code to work.",
    "author": "Robert C. Martin",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "The computer programmer is a creator of universes for which he alone is the lawgiver. No playwright, no stage director, no emperor, however powerful, has ever exercised such absolute authority to arrange a stage or field of battle and to command such unswervingly dutiful actors or troops.",
    "author": "Joseph Weizenbaum",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Hiring people to write code to sell is not the same as hiring people to design and build durable, usable, dependable software.",
    "author": "Larry Constantine",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "No matter what the problem is, it's always a people problem.",
    "author": "Gerald M. Weinberg",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Experience doesn't necessarily teach anything.",
    "author": "Gerald M. Weinberg",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Every big computing disaster has come from taking too many ideas and putting them in one place.",
    "author": "Gordon Bell",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "When debugging, novices insert corrective code; experts remove defective code. ",
    "author": "Richard Pattis",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Always code as if the person who ends up maintaining your code will be a violent psychopath who knows where you live.",
    "author": "John F. Woods",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "I have always found that plans are useless, but planning is indispensable.",
    "author": "Dwight Eisenhower",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "If you cannot grok the overall structure of a program while taking a shower, you are not ready to code it. ",
    "author": "Richart Pattis",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Make everything as simple as possible, but not simpler.",
    "author": "Albert Einstein",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "One principle problem of educating software engineers is that they will not use a new method until they believe it works and, more importantly, that they will not believe the method will work until they see it for themselves.",
    "author": "Humphrey, W.S.",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "The competent programmer is fully aware of the strictly limited size of his own skull; therefore he approaches the programming task in full humility, and among other things he avoids clever tricks like the plague.",
    "author": "Edsger Dijkstra",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "The best performance improvement is the transition from the nonworking state to the working state.",
    "author": "John Ousterhout",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "A good way to stay flexible is to write less code.",
    "author": "Pragmatic Programmer",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "... with proper design, the features come cheaply. This approach is arduous, but continues to succeed.",
    "author": "Dennis Ritchie",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Simplicity is the soul of efficiency.",
    "author": "Austin Freeman",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "When to use iterative development? You should use iterative development only on projects that you want to succeed.",
    "author": "Martin Fowler",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Good judgment comes from experience, and experience comes from bad judgment. ",
    "author": "Frederick P. Brooks",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Optimism is an occupational hazard of programming: feedback is the treatment.",
    "author": "Kent Beck",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "The key to performance is elegance, not battalions of special cases.",
    "author": "Jon Bentley and Doug McIlroy",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Inside every large program, there is a small program trying to get out.",
    "author": "C.A.R. Hoare",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Premature optimization is the root of all evil in programming.",
    "author": "C.A.R. Hoare",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "There are two ways of constructing a software design: One way is to make it so simple that there are obviously no deficiencies, and the other way is to make it so complicated that there are no obvious deficiencies. The first method is far more difficult.",
    "author": "C.A.R. Hoare",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "The price of reliability is the pursuit of the utmost simplicity. It is a price which the very rich may find hard to pay.",
    "author": "C.A.R. Hoare",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Up to a point, it is better to just let the snags [bugs] be there than to spend such time in design that there are none.",
    "author": "Alan M. Turing",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Design and programming are human activities; forget that and all is lost.",
    "author": "Bjarne Stroustrup",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Good code is its own best documentation. As you're about to add a comment, ask yourself, ‘How can I improve the code so that this comment isn't needed?' Improve the code and then document it to make it even clearer.",
    "author": "Steve McConnell",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Let us change our traditional attitude to the construction of programs. Instead of imagining that our main task is to instruct a computer what to to, let us concentrate rather on explaining to human beings what we want a computer to do.",
    "author": "Donald Knuth",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Programming can be fun, so can cryptography; however they should not be combined.",
    "author": "Kreitzberg and Shneiderman",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "A primary cause of complexity is that software vendors uncritically adopt almost any feature that users want.",
    "author": "Niklaus Wirth",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Prolific programmers contribute to certain disaster.",
    "author": "Niklaus Wirth",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "The belief that complex systems require armies of designers and programmers is wrong. A system that is not understood in its entirety, or at least to a significant degree of detail by a single individual, should probably not be built.",
    "author": "Niklaus Wirth",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Any fool can write code that a computer can understand. Good programmers write code that humans can understand.",
    "author": "Martin Fowler",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Perfection (in design) is achieved not when there is nothing more to add, but rather when there is nothing more to take away.",
    "author": "Antoine de Saint-Exupery",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Plan to throw one (implementation) away; you will, anyhow.",
    "author": "Fred Brooks",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "How does a project get to be a year late?... One day at a time.",
    "author": "Fred Brooks",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Even the best planning is not so omniscient as to get it right the first time. ",
    "author": "Fred Brooks",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.",
    "author": "Tom Cargill",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "The best way to get a project done faster is to start sooner.",
    "author": "Jim Highsmith",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "There are 10 people in the world, those who can read BINARY and those who cannot.",
    "author": "Unknown",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "A clever person solves a problem. A wise person AVOIDS it.",
    "author": "Albert Einstein",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Programming today is a race between software engineers striving to build bigger and better idiot-proof programs, and the Universe trying to produce bigger and better idiots. So far, the Universe is winning.",
    "author": "Rich Cook",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Before software can be reusable it first has to be usable.",
    "author": "Ralph Johnson",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "There's no time to stop for gas, we're already late.",
    "author": "Karin Donker",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "To go faster, slow down. Everybody who knows about orbital mechanics understands that.",
    "author": "Scott Cherf",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "It is not enough to do your best: you must KNOW what to do, and THEN do your best.",
    "author": "W.Edwards Deming",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Abraham Lincoln reportedly said that, given eight hours to chop down a tree, he'd spend six sharpening his axe.",
    "author": "TidBITS 654, quoted by Derek K. Miller, via Art Evans",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "The significant problems we face cannot be solved by the same level of thinking that created them.",
    "author": "Albert Einstein",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "When somebody begins a sentence with 'IT WOULD BE NICE IF..' the right thing to do is to wait politely for the speaker to finish. \n No project ever gets around to the it-would-be-nice features: or if they do, they regret it. \n Wait for sentences that begin 'WE HAVE TO..' and pay close attention, and see if you agree.",
    "author": "Tom Van Vleck",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Why do we never have time to do it right, but always have time to DO IT OVER?",
    "author": "Unknown",
    "tags": [
      "quote"
    ]
  },
  {
    "text": " It's hard enough to find an error in your code when you're looking for it; its even harder when you've ASSUMED your code is ERROR-FREE.",
    "author": "Steve McConnell",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "The perfect project plan is POSSIBLE if one first documents a list of ALL the UNKNOWNS.",
    "author": "Bill Langley",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Software and cathedrals are much the same – first we build them, then we pray.",
    "author": "Unknown",
    "tags": [
      "quote"
    ]
  },
  {
    "text": " FAST. GOOD. CHEAP. Choose any two.",
    "author": "Common Project Scheduling Mantra",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Adding manpower to a late software project makes it later.",
    "author": "Fred Brooks",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "Nine people cannot make a baby in a month.",
    "author": "Fred Brooks",
    "tags": [
      "quote"
    ]
  },
  {
    "text": "q. What did the router say to the doctor \n a. It hurts when IP.",
    "author": "Unknown",
    "tags": [
      "network"
    ]
  },
  {
    "text": "If you put your ear to a UNIX shell, can you hear the C?",
    "author": "Unknown",
    "tags": []
  },
  {
    "text": "A programmer had a problem. He thought to himself, 'I know, I'll solve it with threads!' \n has Now problems. two he",
    "author": "Unknown",
    "tags": []
  },
  {
    "text": "The best thing about a Boolean is that even if you are wrong, you are only off by a bit.",
    "author": "Unknown",
    "tags": [
      "data"
    ]
  },
  {
    "text": "!false \n (It's funny because it's true)",
    "author": "Unknown",
    "tags": []
  },
  {
    "text": "An SQL query walks into a bar, approaches two tables and asks, \n \"Hey, can I join you?\"",
    "author": "Unknown",
    "tags": [
      "data"
    ]
  },
  {
    "text": "If doctors were like software engineers, \n they would say things like “Have you tried killing yourself and being reborn?”",
    "author": "Unknown",
    "tags": []
  },
  {
    "text": "A UI is like a joke... \n If you have to explain it, it's not that good.",
    "author": "Unknown",
    "tags": []
  },
  {
    "text": "[\"hip\", \"hip\"] \naka. hip hip array",
    "author": "Unknown",
    "tags": [
      "data"
    ]
  },
  {
    "text": "Three SQL databases walked into a NoSQL bar. \n They left because they couldn't find a table.",
    "author": "Unknown",
    "tags": [
      "data"
    ]
  },
  {
    "text": "99 little bugs in the code, \n99 bugs in the code, \n1 bug fixed...compile again, \n100 little bugs in the code.",
    "author": "Unknown",
    "tags": [
      "bugs"
    ]
  },
  {
    "text": "q. Why do Java devs have to wear glasses? \n a. Because they don't C#.",
    "author": "Unknown",
    "tags": []
  },
  {
    "text": "q. Why did the programmer quit his job? \n a. She didn't get arrays.",
    "author": "Unknown",
    "tags": []
  },
  {
    "text": "Programmer (noun): \n A machine that turns coffee into code.",
    "author": "Unknown",
    "tags": []
  },
  {
    "text": "q. What do you call a programmer from Scandanavia? \na. Nerdic.",
    "author": "Unknown",
    "tags": [
      "javascript"
    ]
  },
  {
    "text": "q. What's the object-oriented way to become wealthy? \na. Inheritance.",
    "author": "Unknown",
    "tags": []
  },
  {
    "text": "Debug (/dēˈbəɡ/): \n Being a detective in a crime movie where you are also the murderer.",
    "author": "Unknown",
    "tags": [
      "bugs"
    ]
  },
  {
    "text": "q. Why did the child component have such great self-esteem? \na. Because its parent kept giving it `props`!",
    "author": "Unknown",
    "tags": [
      "javascript",
      "react"
    ]
  },
  {
    "text": "q. How do you comfort a JavaScript bug? \na. You console it.",
    "author": "Unknown",
    "tags": [
      "javascript",
      "bug"
    ]
  },
  {
    "text": "q. Why do C# and Java developers keep breaking their keyboards? \na. Because they use a strongly typed language!",
    "author": "Unknown",
    "tags": [
      "javascript",
      "java",
      "c#"
    ]
  },
  {
    "text": "q. Why did the functional component feel lost? \na. Because it didn't know what `state` it was in!",
    "author": "Unknown",
    "tags": [
      "javascript",
      "react"
    ]
  },
  {
    "text": "q. Why was the JavaScript developer sad? \na. Because he didn't Node how to Express himself!",
    "author": "Unknown",
    "tags": [
      "javascript",
      "node"
    ]
  },
  {
    "text": "q. Why did the developer go broke? \na. Because he used up all his cache!",
    "author": "Unknown",
    "tags": []
  },
  {
    "text": "q. Why did the React Higher Order Component give up? \na. Because it sur-rendered to the prop-aganda!",
    "author": "Unknown",
    "tags": [
      "javascript",
      "react"
    ]
  },
  {
    "text": "When a JavaScript date has gone bad, \"Don't call me, I'll callback you. I promise!\"",
    "author": "Unknown",
    "tags": [
      "javascript"
    ]
  },
  {
    "text": "Dev1 saw a strange JavaScript function & asked, \"What is this?\". \nDev2 responded, \"I don't know. I would've called you, but I was in a bind\"",
    "author": "Unknown",
    "tags": [
      "javascript"
    ]
  },
  {
    "text": "Two JavaScript developers walked into the variable `bar`. \nOuch!",
    "author": "Unknown",
    "tags": [
      "javascript"
    ]
  },
  {
    "text": "q. Why did Jason cover himself with bubble wrap? \na. Because he wanted to make a cross-domain JSONP request.",
    "author": "Unknown",
    "tags": [
      "javascript"
    ]
  },
  {
    "text": "q. Why did the software company hire drama majors from Starbucks? \na. Because they needed JavaScript experts!",
    "author": "Unknown",
    "tags": [
      "javascript"
    ]
  },
  {
    "text": "q. Why did the CoffeeScript developer keep getting lost? \na. Because he couldn't find his source without a map!",
    "author": "Unknown",
    "tags": [
      "javascript",
      "coffeescript"
    ]
  },
  {
    "text": "q. How did the doctor revive the developer? \na. The dev wasn't responsive so the doc picked him up by his bootstraps!",
    "author": "Unknown",
    "tags": [
      "css"
    ]
  },
  {
    "text": "q. Why did the C# developer fall asleep? \na. Because he didn't like Java.",
    "author": "Unknown",
    "tags": [
      "java",
      "c#"
    ]
  },
  {
    "text": "q. Why did the JavaScript boxer goto the chiropractor? \na. Because his backbone was angular from a knockout and required attention!",
    "author": "Unknown",
    "tags": [
      "javascript",
      "knockout",
      "backbone"
    ]
  },
  {
    "text": "q. How did the web dev hurt Comic Sans feelings? \na. Once he saw the font he quickly changed to Open Sans and exclaimed \"In your @font-face!\"",
    "author": "Unknown",
    "tags": [
      "css"
    ]
  },
  {
    "text": "q. Why was Ember.js turning red? \na. Because it was EMBERrassed for not remEMBERing its route home!",
    "author": "Unknown",
    "tags": [
      "javascript",
      "ember"
    ]
  },
  {
    "text": "If it looks like a duck, quacks like a duck, but needs batteries... you probably have the wrong abstraction.",
    "author": "Liskov's Substitution Principle",
    "tags": [
      "quote",
      "principles"
    ]
  },
  {
    "text": "No one in the brief history of computing has ever written a piece of perfect software. It's unlikely that you'll be the first.",
    "author": "Andy Hunt",
    "tags": [
      "quote",
      "principles"
    ]
  },
  {
    "text": "There is no such thing as a best solution, be it a tool, a language, or an operating system. There can only be systems that are more appropriate in a particular set of circumstances.",
    "author": "Andy Hunt",
    "tags": [
      "quote",
      "principles"
    ]
  },
  {
    "text": "Great software today is often preferable to perfect software tomorrow. If you give your users something to play with early, their feedback will often lead you to a better eventual solution.",
    "author": "Andy Hunt",
    "tags": [
      "quote",
      "principles"
    ]
  },
  {
    "text": "While software development is immune from almost all physical laws, entropy hits us hard.",
    "author": "Andy Hunt",
    "tags": [
      "quote",
      "principles"
    ]
  },
  {
    "text": "If you don't hear any complaints from users, they are not using the software – or your support email is broken.",
    "author": "Atli Björgvin Oddsson",
    "tags": [
      "quote",
      "principles"
    ]
  },
  {
    "text": "There are two ways to write error-free programs; \n\nonly the third one works.",
    "author": "Alan J. Perlis",
    "tags": ["programming", "humor"]
  },
  {
    "text": "Ready, fire, aim: the fast approach to software development.\n\nReady, aim, aim, aim, aim: the slow approach to software development.",
    "author": "Anonymous",
    "tags": ["programming", "humor"]
  },
  {
    "text": "A good programmer is someone who always looks both ways before crossing a one-way street.",
    "author": "Doug Linder",
    "tags": ["programming", "humor"]
  },
  {
    "text": "In order to understand recursion, one must first understand recursion.",
    "author": "Anonymous",
    "tags": ["programming", "humor"]
  },
  {
    "text": "Software gets slower faster than hardware gets faster.",
    "author": "Niklaus Wirth",
    "tags": ["programming", "humor"]
  },
  {
    "text": "Hofstadter's Law (/hɒf-stæd-tər lɔː/): \n\nIt always takes longer than you expect- \neven when you take into account Hofstadter's Law.",
    "author": "Douglas Hofstadter",
    "tags": ["planning", "humor", "principles"]
  },
  {
    "text": "In theory there is no difference between theory and practice. \n\nIn practice there is.",
    "author": "Yogi Berra",
    "tags": ["planning", "humor"]
  },
  {
    "text": "Debugging is twice as hard as writing the code in the first place.\n\nTherefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.",
    "author": "Brian Kernighan",
    "tags": ["programming", "humor"]
  },
  {
    "text": "When I wrote this code, only God and I understood what I did. \n\nNow only God knows.",
    "author": "Anonymous",
    "tags": ["programming", "humor"]
  },
  {
    "text": "A son asked his father, a programmer:\n 'Why does the the sun rise in\n  the east and set in the west?' \n\nThe father's response: \n 'It works, don't touch!'",
    "author": "Anonymous",
    "tags": ["programming", "humor"]
  },
  {
    "text": "Copy-and-Paste was programmed by programmers for programmers, actually.",
    "author": "Anonymous",
    "tags": ["programming", "humor"]
  },
  {
    "text": "Algorithm (/ˈæl.gə.rɪ.ðəm/):\n\nWord used by programmers when they don't want \nto explain what they did.",
    "author": "Anonymous",
    "tags": ["programming", "humor", "xxx"]
  }
]